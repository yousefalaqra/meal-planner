/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum Gender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
}

export enum ActivityLevel {
    Sedentary = "Sedentary",
    LightlyActive = "Lightly Active",
    ModeratelyActive = "Moderately Active",
    VeryActive = "Very Active",
}

export type ClientProfile = {
    name?: string | undefined;
    age?: number | undefined;
    gender?: Gender | undefined;
    weight?: number | undefined;
    height?: number | undefined;
    activityLevel?: ActivityLevel | undefined;
    dietaryPreferences?: string | undefined;
    allergiesRestrictions?: Array<string> | undefined;
};

/** @internal */
export const Gender$ = z.nativeEnum(Gender);

/** @internal */
export const ActivityLevel$ = z.nativeEnum(ActivityLevel);

/** @internal */
export namespace ClientProfile$ {
    export type Inbound = {
        name?: string | undefined;
        age?: number | undefined;
        gender?: Gender | undefined;
        weight?: number | undefined;
        height?: number | undefined;
        activityLevel?: ActivityLevel | undefined;
        dietaryPreferences?: string | undefined;
        allergiesRestrictions?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<ClientProfile, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string().optional(),
            age: z.number().int().optional(),
            gender: Gender$.optional(),
            weight: z.number().optional(),
            height: z.number().optional(),
            activityLevel: ActivityLevel$.optional(),
            dietaryPreferences: z.string().optional(),
            allergiesRestrictions: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.age === undefined ? null : { age: v.age }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.activityLevel === undefined ? null : { activityLevel: v.activityLevel }),
                ...(v.dietaryPreferences === undefined
                    ? null
                    : { dietaryPreferences: v.dietaryPreferences }),
                ...(v.allergiesRestrictions === undefined
                    ? null
                    : { allergiesRestrictions: v.allergiesRestrictions }),
            };
        });

    export type Outbound = {
        name?: string | undefined;
        age?: number | undefined;
        gender?: Gender | undefined;
        weight?: number | undefined;
        height?: number | undefined;
        activityLevel?: ActivityLevel | undefined;
        dietaryPreferences?: string | undefined;
        allergiesRestrictions?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClientProfile> = z
        .object({
            name: z.string().optional(),
            age: z.number().int().optional(),
            gender: Gender$.optional(),
            weight: z.number().optional(),
            height: z.number().optional(),
            activityLevel: ActivityLevel$.optional(),
            dietaryPreferences: z.string().optional(),
            allergiesRestrictions: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.age === undefined ? null : { age: v.age }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.activityLevel === undefined ? null : { activityLevel: v.activityLevel }),
                ...(v.dietaryPreferences === undefined
                    ? null
                    : { dietaryPreferences: v.dietaryPreferences }),
                ...(v.allergiesRestrictions === undefined
                    ? null
                    : { allergiesRestrictions: v.allergiesRestrictions }),
            };
        });
}
